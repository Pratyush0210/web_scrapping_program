<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20222.22.0916.1526                               -->
<workbook original-version='18.1' source-build='2022.2.2 (20222.22.0916.1526)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='World_population' inline='true' name='federated.0ro78o71usso4z1bn9l191a2wqig' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='World_population' name='textscan.11mwb8i1uecy921660dgk0ade0pq'>
            <connection class='textscan' directory='C:/Users/PRATYUSH KUMAR/OneDrive/Desktop' filename='World_population.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.11mwb8i1uecy921660dgk0ade0pq' name='World_population.csv' table='[World_population#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='integer' name='#' ordinal='1' />
            <column datatype='string' name='Country (or dependency)' ordinal='2' />
            <column datatype='integer' name='Population (2020)' ordinal='3' />
            <column datatype='real' name='Yearly Change in %' ordinal='4' />
            <column datatype='integer' name='Net Change' ordinal='5' />
            <column datatype='integer' name='Density (P/Km²)' ordinal='6' />
            <column datatype='integer' name='Land Area (Km²)' ordinal='7' />
            <column datatype='real' name='Migrants (net)' ordinal='8' />
            <column datatype='real' name='Fert. Rate' ordinal='9' />
            <column datatype='real' name='Med. Age' ordinal='10' />
            <column datatype='real' name='Urban Pop %' ordinal='11' />
            <column datatype='real' name='World Share in %' ordinal='12' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.11mwb8i1uecy921660dgk0ade0pq' name='World_population.csv' table='[World_population#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='integer' name='#' ordinal='1' />
            <column datatype='string' name='Country (or dependency)' ordinal='2' />
            <column datatype='integer' name='Population (2020)' ordinal='3' />
            <column datatype='real' name='Yearly Change in %' ordinal='4' />
            <column datatype='integer' name='Net Change' ordinal='5' />
            <column datatype='integer' name='Density (P/Km²)' ordinal='6' />
            <column datatype='integer' name='Land Area (Km²)' ordinal='7' />
            <column datatype='real' name='Migrants (net)' ordinal='8' />
            <column datatype='real' name='Fert. Rate' ordinal='9' />
            <column datatype='real' name='Med. Age' ordinal='10' />
            <column datatype='real' name='Urban Pop %' ordinal='11' />
            <column datatype='real' name='World Share in %' ordinal='12' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[World_population.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;₹&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[World_population.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[World_population.csv_3ADDD34700384CF7A1DF190CF2DDFF48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>#</remote-name>
            <remote-type>20</remote-type>
            <local-name>[#]</local-name>
            <parent-name>[World_population.csv]</parent-name>
            <remote-alias>#</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[World_population.csv_3ADDD34700384CF7A1DF190CF2DDFF48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country (or dependency)</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country (or dependency)]</local-name>
            <parent-name>[World_population.csv]</parent-name>
            <remote-alias>Country (or dependency)</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[World_population.csv_3ADDD34700384CF7A1DF190CF2DDFF48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population (2020)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population (2020)]</local-name>
            <parent-name>[World_population.csv]</parent-name>
            <remote-alias>Population (2020)</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[World_population.csv_3ADDD34700384CF7A1DF190CF2DDFF48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Yearly Change in %</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Yearly Change in %]</local-name>
            <parent-name>[World_population.csv]</parent-name>
            <remote-alias>Yearly Change in %</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[World_population.csv_3ADDD34700384CF7A1DF190CF2DDFF48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Net Change</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Net Change]</local-name>
            <parent-name>[World_population.csv]</parent-name>
            <remote-alias>Net Change</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[World_population.csv_3ADDD34700384CF7A1DF190CF2DDFF48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Density (P/Km²)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Density (P/Km²)]</local-name>
            <parent-name>[World_population.csv]</parent-name>
            <remote-alias>Density (P/Km²)</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[World_population.csv_3ADDD34700384CF7A1DF190CF2DDFF48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Land Area (Km²)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Land Area (Km²)]</local-name>
            <parent-name>[World_population.csv]</parent-name>
            <remote-alias>Land Area (Km²)</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[World_population.csv_3ADDD34700384CF7A1DF190CF2DDFF48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Migrants (net)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Migrants (net)]</local-name>
            <parent-name>[World_population.csv]</parent-name>
            <remote-alias>Migrants (net)</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[World_population.csv_3ADDD34700384CF7A1DF190CF2DDFF48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Fert. Rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Fert. Rate]</local-name>
            <parent-name>[World_population.csv]</parent-name>
            <remote-alias>Fert. Rate</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[World_population.csv_3ADDD34700384CF7A1DF190CF2DDFF48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Med. Age</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Med. Age]</local-name>
            <parent-name>[World_population.csv]</parent-name>
            <remote-alias>Med. Age</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[World_population.csv_3ADDD34700384CF7A1DF190CF2DDFF48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Urban Pop %</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Urban Pop %]</local-name>
            <parent-name>[World_population.csv]</parent-name>
            <remote-alias>Urban Pop %</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[World_population.csv_3ADDD34700384CF7A1DF190CF2DDFF48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>World Share in %</remote-name>
            <remote-type>5</remote-type>
            <local-name>[World Share in %]</local-name>
            <parent-name>[World_population.csv]</parent-name>
            <remote-alias>World Share in %</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[World_population.csv_3ADDD34700384CF7A1DF190CF2DDFF48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.0ro78o71usso4z1bn9l191a2wqig].[attr:Med. Age:qk]&quot;' value='Median Age' />
          <alias key='&quot;[federated.0ro78o71usso4z1bn9l191a2wqig].[attr:Urban Pop \%:qk]&quot;' value='Urban Population in %' />
        </aliases>
      </column>
      <column caption='Total Population' datatype='integer' name='[Calculation_433752959361794048]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Population (2020)]' />
      </column>
      <column caption='Urban Population' datatype='real' name='[Calculation_433752959363108868]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='[Urban Pop %]' />
      </column>
      <column datatype='string' name='[Country (or dependency)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
        <semantic-values semantic-role='[Country].[Name]'>
          <semantic-value key='&quot;Czech Republic (Czechia)&quot;' value='&quot;Czechia&quot;' />
        </semantic-values>
      </column>
      <column datatype='real' name='[Fert. Rate]' role='measure' type='quantitative' />
      <column datatype='real' name='[Med. Age]' role='measure' type='quantitative' />
      <column datatype='real' name='[Migrants (net)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Net Change]' role='measure' type='quantitative' />
      <column datatype='real' name='[Urban Pop %]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='World_population.csv' datatype='table' name='[__tableau_internal_object_id__].[World_population.csv_3ADDD34700384CF7A1DF190CF2DDFF48]' role='measure' type='quantitative' />
      <column-instance column='[Fert. Rate]' derivation='Attribute' name='[attr:Fert. Rate:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Med. Age]' derivation='Attribute' name='[attr:Med. Age:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Migrants (net)]' derivation='Attribute' name='[attr:Migrants (net):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Net Change]' derivation='Attribute' name='[attr:Net Change:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Urban Pop %]' derivation='Attribute' name='[attr:Urban Pop %:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Country (or dependency)]' derivation='Max' name='[max:Country (or dependency):nk]' pivot='key' type='nominal' />
      <column-instance column='[Country (or dependency)]' derivation='None' name='[none:Country (or dependency):nk]' pivot='key' type='nominal' />
      <column-instance column='[Fert. Rate]' derivation='None' name='[none:Fert. Rate:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Migrants (net)]' derivation='None' name='[none:Migrants (net):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Net Change]' derivation='None' name='[none:Net Change:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Fert. Rate]' derivation='Sum' name='[sum:Fert. Rate:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Migrants (net)]' derivation='Sum' name='[sum:Migrants (net):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Net Change]' derivation='Sum' name='[sum:Net Change:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Urban Pop %]' derivation='Sum' name='[sum:Urban Pop %:qk]' pivot='key' type='quantitative' />
      <group caption='Action (Country (or dependency))' hidden='true' name='[Action (Country (or dependency))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country (or dependency)]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0ro78o71usso4z1bn9l191a2wqig].[attr:Fert. Rate:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0ro78o71usso4z1bn9l191a2wqig].[attr:Urban Pop \%:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0ro78o71usso4z1bn9l191a2wqig].[none:Fert. Rate:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0ro78o71usso4z1bn9l191a2wqig].[sum:Fert. Rate:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0ro78o71usso4z1bn9l191a2wqig].[sum:Urban Pop \%:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0ro78o71usso4z1bn9l191a2wqig].[attr:Net Change:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0ro78o71usso4z1bn9l191a2wqig].[none:Net Change:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0ro78o71usso4z1bn9l191a2wqig].[sum:Net Change:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0ro78o71usso4z1bn9l191a2wqig].[attr:Migrants (net):qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0ro78o71usso4z1bn9l191a2wqig].[none:Migrants (net):qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0ro78o71usso4z1bn9l191a2wqig].[sum:Migrants (net):qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[max:Country (or dependency):nk]' palette='summer_10_0' type='palette'>
            <map to='#00a2b3'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#00a2b3'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#00a2b3'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#00a2b3'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#00a2b3'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#00a2b3'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#00a2b3'>
              <bucket>&quot;Curaçao&quot;</bucket>
            </map>
            <map to='#00a2b3'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#00a2b3'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#00a2b3'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#00a2b3'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#00a2b3'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#00a2b3'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#00a2b3'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#00a2b3'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#00a2b3'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#00a2b3'>
              <bucket>&quot;Mayotte&quot;</bucket>
            </map>
            <map to='#00a2b3'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#00a2b3'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#00a2b3'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#00a2b3'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#00a2b3'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#00a2b3'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#00a2b3'>
              <bucket>&quot;Sint Maarten&quot;</bucket>
            </map>
            <map to='#00a2b3'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#00a2b3'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#00a2b3'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#00a2b3'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#00a2b3'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;Niue&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;Caribbean Netherlands&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;Saint Barthelemy&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;Sao Tome &amp; Principe&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;Cabo Verde&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;Channel Islands&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;Côte d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;French Guiana&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;North Korea&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;Réunion&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;Saint Martin&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;Turks and Caicos&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;Saint Pierre &amp; Miquelon&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;American Samoa&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;DR Congo&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;Holy See&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;Tokelau&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;U.S. Virgin Islands&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;Czech Republic (Czechia)&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;Micronesia&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;St. Vincent &amp; Grenadines&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;Wallis &amp; Futuna&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;Saint Kitts &amp; Nevis&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;State of Palestine&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;Western Sahara&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Country (or dependency):nk]' palette='summer_10_0' type='palette'>
            <map to='#00a2b3'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#00a2b3'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#00a2b3'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#00a2b3'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#00a2b3'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#00a2b3'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#00a2b3'>
              <bucket>&quot;Curaçao&quot;</bucket>
            </map>
            <map to='#00a2b3'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#00a2b3'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#00a2b3'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#00a2b3'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#00a2b3'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#00a2b3'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#00a2b3'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#00a2b3'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#00a2b3'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#00a2b3'>
              <bucket>&quot;Mayotte&quot;</bucket>
            </map>
            <map to='#00a2b3'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#00a2b3'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#00a2b3'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#00a2b3'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#00a2b3'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#00a2b3'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#00a2b3'>
              <bucket>&quot;Sint Maarten&quot;</bucket>
            </map>
            <map to='#00a2b3'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#00a2b3'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#00a2b3'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#00a2b3'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#00a2b3'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;Niue&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;Caribbean Netherlands&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;Saint Barthelemy&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;Sao Tome &amp; Principe&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;Cabo Verde&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;Channel Islands&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;Côte d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;French Guiana&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;North Korea&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;Réunion&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;Saint Martin&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;Turks and Caicos&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;Saint Pierre &amp; Miquelon&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;American Samoa&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;DR Congo&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;Holy See&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;Tokelau&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;U.S. Virgin Islands&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;Czech Republic (Czechia)&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;Micronesia&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;St. Vincent &amp; Grenadines&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;Wallis &amp; Futuna&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;Saint Kitts &amp; Nevis&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;State of Palestine&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;Western Sahara&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='World_population.csv' id='World_population.csv_3ADDD34700384CF7A1DF190CF2DDFF48'>
            <properties context=''>
              <relation connection='textscan.11mwb8i1uecy921660dgk0ade0pq' name='World_population.csv' table='[World_population#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='integer' name='#' ordinal='1' />
                  <column datatype='string' name='Country (or dependency)' ordinal='2' />
                  <column datatype='integer' name='Population (2020)' ordinal='3' />
                  <column datatype='real' name='Yearly Change in %' ordinal='4' />
                  <column datatype='integer' name='Net Change' ordinal='5' />
                  <column datatype='integer' name='Density (P/Km²)' ordinal='6' />
                  <column datatype='integer' name='Land Area (Km²)' ordinal='7' />
                  <column datatype='real' name='Migrants (net)' ordinal='8' />
                  <column datatype='real' name='Fert. Rate' ordinal='9' />
                  <column datatype='real' name='Med. Age' ordinal='10' />
                  <column datatype='real' name='Urban Pop %' ordinal='11' />
                  <column datatype='real' name='World Share in %' ordinal='12' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1_63B6331583FA429D8497F95A59BBEDF5]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Country wise values' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Country Population(2020), Urban and Yearly change in Population'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#555555' fontname='Tableau Semibold' fontsize='12'>Country Population(2020), Urban and Yearly change in Population</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='World_population' name='federated.0ro78o71usso4z1bn9l191a2wqig' />
          </datasources>
          <datasource-dependencies datasource='federated.0ro78o71usso4z1bn9l191a2wqig'>
            <column datatype='string' name='[Country (or dependency)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Czech Republic (Czechia)&quot;' value='&quot;Czechia&quot;' />
              </semantic-values>
            </column>
            <column datatype='integer' name='[Population (2020)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Urban Pop %]' role='measure' type='quantitative' />
            <column datatype='real' name='[Yearly Change in %]' role='measure' type='quantitative' />
            <column-instance column='[Country (or dependency)]' derivation='None' name='[none:Country (or dependency):nk]' pivot='key' type='nominal' />
            <column-instance column='[Population (2020)]' derivation='None' name='[none:Population (2020):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Urban Pop %]' derivation='None' name='[none:Urban Pop %:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Yearly Change in %]' derivation='None' name='[none:Yearly Change in %:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ro78o71usso4z1bn9l191a2wqig].[Action (Country (or dependency))]'>
            <groupfilter function='level-members' level='[Country (or dependency)]' user:ui-action-filter='[Action1_63B6331583FA429D8497F95A59BBEDF5]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0ro78o71usso4z1bn9l191a2wqig].[none:Country (or dependency):nk]' filter-group='3'>
            <groupfilter function='level-members' level='[none:Country (or dependency):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0ro78o71usso4z1bn9l191a2wqig].[none:Urban Pop %:qk]' included-values='non-null' />
          <slices>
            <column>[federated.0ro78o71usso4z1bn9l191a2wqig].[none:Urban Pop %:qk]</column>
            <column>[federated.0ro78o71usso4z1bn9l191a2wqig].[none:Country (or dependency):nk]</column>
            <column>[federated.0ro78o71usso4z1bn9l191a2wqig].[Action (Country (or dependency))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
            <format attr='tick-color' value='#00000000' />
            <format attr='title' class='0' field='[federated.0ro78o71usso4z1bn9l191a2wqig].[none:Urban Pop %:qk]' scope='rows' value='Urban Population in %' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='font-weight' value='bold' />
            <format attr='color' value='#000000' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' scope='rows' value='-90' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' data-class='subtotal' value='#00000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='cols' value='0' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-weight' value='bold' />
            <format attr='font-size' value='9' />
            <format attr='color' value='#000000' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-color' value='#898989' />
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='dotted' />
            <format attr='stroke-size' value='2' />
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0ro78o71usso4z1bn9l191a2wqig].[none:Country (or dependency):nk]' />
              <size column='[federated.0ro78o71usso4z1bn9l191a2wqig].[none:Population (2020):qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' fontsize='11'>Country (or dependency):&#9;</run>
                <run bold='true' fontcolor='#aa0000' fontsize='11'><![CDATA[<[federated.0ro78o71usso4z1bn9l191a2wqig].[none:Country (or dependency):nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='11'>Population (2020):&#9;</run>
                <run bold='true' fontcolor='#ff5500' fontsize='11'><![CDATA[<[federated.0ro78o71usso4z1bn9l191a2wqig].[none:Population (2020):qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='11'>Urban Population in %:&#9;</run>
                <run bold='true' fontcolor='#d37295' fontsize='11'><![CDATA[<[federated.0ro78o71usso4z1bn9l191a2wqig].[none:Urban Pop %:qk]> %]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='11'>Yearly Change in %:&#9;</run>
                <run bold='true' fontcolor='#348a70' fontsize='11'><![CDATA[<[federated.0ro78o71usso4z1bn9l191a2wqig].[none:Yearly Change in %:qk]> %]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='5.7254762649536133' />
                <format attr='shape' value=':filled/circle' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0ro78o71usso4z1bn9l191a2wqig].[none:Urban Pop %:qk]</rows>
        <cols>[federated.0ro78o71usso4z1bn9l191a2wqig].[none:Yearly Change in %:qk]</cols>
      </table>
      <simple-id uuid='{409C0A51-6A06-48EE-A855-BF33FFC3C53A}' />
    </worksheet>
    <worksheet name='Country wise Population density, Median Age and World share in %'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#555555' fontname='Tableau Medium' fontsize='12'>Country wise Population density, Median Age and World share in %</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='World_population' name='federated.0ro78o71usso4z1bn9l191a2wqig' />
          </datasources>
          <datasource-dependencies datasource='federated.0ro78o71usso4z1bn9l191a2wqig'>
            <column datatype='string' name='[Country (or dependency)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Czech Republic (Czechia)&quot;' value='&quot;Czechia&quot;' />
              </semantic-values>
            </column>
            <column datatype='integer' name='[Density (P/Km²)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Med. Age]' role='measure' type='quantitative' />
            <column datatype='real' name='[World Share in %]' role='measure' type='quantitative' />
            <column-instance column='[Country (or dependency)]' derivation='None' name='[none:Country (or dependency):nk]' pivot='key' type='nominal' />
            <column-instance column='[Density (P/Km²)]' derivation='Sum' name='[sum:Density (P/Km²):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Med. Age]' derivation='Sum' name='[sum:Med. Age:qk]' pivot='key' type='quantitative' />
            <column-instance column='[World Share in %]' derivation='Sum' name='[sum:World Share in %:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ro78o71usso4z1bn9l191a2wqig].[Action (Country (or dependency))]'>
            <groupfilter function='level-members' level='[Country (or dependency)]' user:ui-action-filter='[Action1_63B6331583FA429D8497F95A59BBEDF5]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0ro78o71usso4z1bn9l191a2wqig].[none:Country (or dependency):nk]' filter-group='3'>
            <groupfilter function='level-members' level='[none:Country (or dependency):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0ro78o71usso4z1bn9l191a2wqig].[none:Country (or dependency):nk]</column>
            <column>[federated.0ro78o71usso4z1bn9l191a2wqig].[Action (Country (or dependency))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='font-weight' data-class='subtotal' value='bold' />
            <format attr='font-size' data-class='subtotal' value='10' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#f5f5f5' />
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='rows' value='1' />
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#ffffff' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' value='#0000009b' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='solid' />
            <format attr='stroke-size' value='1' />
          </style-rule>
          <style-rule element='tooltip'>
            <format attr='font-weight' value='normal' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0ro78o71usso4z1bn9l191a2wqig].[none:Country (or dependency):nk]' />
              <size column='[federated.0ro78o71usso4z1bn9l191a2wqig].[sum:World Share in %:qk]' />
              <lod column='[federated.0ro78o71usso4z1bn9l191a2wqig].[sum:Med. Age:qk]' />
              <lod column='[federated.0ro78o71usso4z1bn9l191a2wqig].[sum:Density (P/Km²):qk]' />
              <text column='[federated.0ro78o71usso4z1bn9l191a2wqig].[none:Country (or dependency):nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontcolor='#787878'>Country (or dependency):&#9;</run>
                <run bold='true'><![CDATA[<[federated.0ro78o71usso4z1bn9l191a2wqig].[none:Country (or dependency):nk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#666666'>Population Density:</run>
                <run bold='true'><![CDATA[	<[federated.0ro78o71usso4z1bn9l191a2wqig].[sum:Density (P/Km²):qk]> P/Km²]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#787878'>Median Age:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0ro78o71usso4z1bn9l191a2wqig].[sum:Med. Age:qk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#787878'>World Share in %:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0ro78o71usso4z1bn9l191a2wqig].[sum:World Share in %:qk]> %]]></run>
              </formatted-text>
            </customized-tooltip>
            <customized-label>
              <formatted-text>
                <run bold='true' fontsize='10'>&lt;</run>
                <run bold='true' fontsize='10'>[federated.0ro78o71usso4z1bn9l191a2wqig].[none:Country (or dependency):nk]</run>
                <run bold='true' fontsize='10'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{A491334C-934A-4518-AF68-C89E5E31573F}' />
    </worksheet>
    <worksheet name='Country wise values'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='World_population' name='federated.0ro78o71usso4z1bn9l191a2wqig' />
          </datasources>
          <datasource-dependencies datasource='federated.0ro78o71usso4z1bn9l191a2wqig'>
            <column caption='Total Population' datatype='integer' name='[Calculation_433752959361794048]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Population (2020)]' />
            </column>
            <column datatype='string' name='[Country (or dependency)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Czech Republic (Czechia)&quot;' value='&quot;Czechia&quot;' />
              </semantic-values>
            </column>
            <column datatype='integer' name='[Density (P/Km²)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Land Area (Km²)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Med. Age]' role='measure' type='quantitative' />
            <column datatype='real' name='[Migrants (net)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Population (2020)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Urban Pop %]' role='measure' type='quantitative' />
            <column datatype='real' name='[World Share in %]' role='measure' type='quantitative' />
            <column datatype='real' name='[Yearly Change in %]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_433752959361794048]' derivation='Attribute' name='[attr:Calculation_433752959361794048:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Density (P/Km²)]' derivation='Attribute' name='[attr:Density (P/Km²):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Land Area (Km²)]' derivation='Attribute' name='[attr:Land Area (Km²):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Med. Age]' derivation='Attribute' name='[attr:Med. Age:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Migrants (net)]' derivation='Attribute' name='[attr:Migrants (net):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Urban Pop %]' derivation='Attribute' name='[attr:Urban Pop %:qk]' pivot='key' type='quantitative' />
            <column-instance column='[World Share in %]' derivation='Attribute' name='[attr:World Share in %:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Yearly Change in %]' derivation='Attribute' name='[attr:Yearly Change in %:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country (or dependency)]' derivation='None' name='[none:Country (or dependency):nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ro78o71usso4z1bn9l191a2wqig].[:Measure Names]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ro78o71usso4z1bn9l191a2wqig].[attr:Density (P/Km²):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ro78o71usso4z1bn9l191a2wqig].[attr:Land Area (Km²):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ro78o71usso4z1bn9l191a2wqig].[attr:Med. Age:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ro78o71usso4z1bn9l191a2wqig].[attr:Migrants (net):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ro78o71usso4z1bn9l191a2wqig].[attr:Calculation_433752959361794048:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ro78o71usso4z1bn9l191a2wqig].[attr:Urban Pop \%:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ro78o71usso4z1bn9l191a2wqig].[attr:Yearly Change in \%:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0ro78o71usso4z1bn9l191a2wqig].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0ro78o71usso4z1bn9l191a2wqig].[attr:Calculation_433752959361794048:qk]&quot;</bucket>
              <bucket>&quot;[federated.0ro78o71usso4z1bn9l191a2wqig].[attr:Density (P/Km²):qk]&quot;</bucket>
              <bucket>&quot;[federated.0ro78o71usso4z1bn9l191a2wqig].[attr:Land Area (Km²):qk]&quot;</bucket>
              <bucket>&quot;[federated.0ro78o71usso4z1bn9l191a2wqig].[attr:Urban Pop \%:qk]&quot;</bucket>
              <bucket>&quot;[federated.0ro78o71usso4z1bn9l191a2wqig].[attr:Med. Age:qk]&quot;</bucket>
              <bucket>&quot;[federated.0ro78o71usso4z1bn9l191a2wqig].[attr:Migrants (net):qk]&quot;</bucket>
              <bucket>&quot;[federated.0ro78o71usso4z1bn9l191a2wqig].[attr:World Share in \%:qk]&quot;</bucket>
              <bucket>&quot;[federated.0ro78o71usso4z1bn9l191a2wqig].[attr:Yearly Change in \%:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0ro78o71usso4z1bn9l191a2wqig].[none:Country (or dependency):nk]'>
            <groupfilter function='member' level='[none:Country (or dependency):nk]' member='&quot;Spain&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0ro78o71usso4z1bn9l191a2wqig].[:Measure Names]</column>
            <column>[federated.0ro78o71usso4z1bn9l191a2wqig].[none:Country (or dependency):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0ro78o71usso4z1bn9l191a2wqig].[attr:Med. Age:qk]' value='N' />
            <format attr='font-size' data-class='subtotal' value='14' />
            <format attr='font-size' data-class='total' value='15' />
            <format attr='color' value='#000000' />
            <format attr='font-weight' value='bold' />
            <format attr='text-align' value='center' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0ro78o71usso4z1bn9l191a2wqig].[none:Country (or dependency):nk]' value='240' />
            <format attr='background-color' field='[federated.0ro78o71usso4z1bn9l191a2wqig].[:Measure Names]' value='#faf4e7' />
          </style-rule>
          <style-rule element='field-labels-decoration'>
            <format attr='font-weight' value='bold' />
            <format attr='font-size' value='10' />
            <format attr='background-color' value='#faf4e7' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' value='#000000' />
            <format attr='font-weight' value='bold' />
            <format attr='font-size' value='10' />
            <format attr='text-align' value='center' />
            <format attr='font-size' field='[federated.0ro78o71usso4z1bn9l191a2wqig].[none:Country (or dependency):nk]' value='12' />
            <format attr='color' field='[federated.0ro78o71usso4z1bn9l191a2wqig].[none:Country (or dependency):nk]' value='#ff5500' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#dfedeb' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='rows' value='1' />
            <format attr='background-color' value='#e7f1f5' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='tooltip'>
            <format attr='color' value='#000000' />
            <format attr='font-weight' value='normal' />
            <format attr='font-size' value='14' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0ro78o71usso4z1bn9l191a2wqig].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0ro78o71usso4z1bn9l191a2wqig].[none:Country (or dependency):nk]</rows>
        <cols>[federated.0ro78o71usso4z1bn9l191a2wqig].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{AEB894E0-D22A-4A73-906A-EAAA1B438000}' />
    </worksheet>
    <worksheet name='Total change in population due to Fertility rate and Migration '>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#555555' fontname='Tableau Medium' fontsize='11'>Total change in population due to Fertility rate and Migration </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='World_population' name='federated.0ro78o71usso4z1bn9l191a2wqig' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0ro78o71usso4z1bn9l191a2wqig'>
            <column datatype='string' name='[Country (or dependency)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Czech Republic (Czechia)&quot;' value='&quot;Czechia&quot;' />
              </semantic-values>
            </column>
            <column datatype='real' name='[Fert. Rate]' role='measure' type='quantitative' />
            <column datatype='real' name='[Migrants (net)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Net Change]' role='measure' type='quantitative' />
            <column-instance column='[Country (or dependency)]' derivation='None' name='[none:Country (or dependency):nk]' pivot='key' type='nominal' />
            <column-instance column='[Fert. Rate]' derivation='None' name='[none:Fert. Rate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Migrants (net)]' derivation='None' name='[none:Migrants (net):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Fert. Rate]' derivation='Sum' name='[sum:Fert. Rate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Net Change]' derivation='Sum' name='[sum:Net Change:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ro78o71usso4z1bn9l191a2wqig].[Action (Country (or dependency))]'>
            <groupfilter function='level-members' level='[Country (or dependency)]' user:ui-action-filter='[Action1_63B6331583FA429D8497F95A59BBEDF5]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0ro78o71usso4z1bn9l191a2wqig].[none:Country (or dependency):nk]' filter-group='3'>
            <groupfilter function='level-members' level='[none:Country (or dependency):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0ro78o71usso4z1bn9l191a2wqig].[none:Migrants (net):qk]' included-values='non-null' />
          <slices>
            <column>[federated.0ro78o71usso4z1bn9l191a2wqig].[none:Migrants (net):qk]</column>
            <column>[federated.0ro78o71usso4z1bn9l191a2wqig].[none:Country (or dependency):nk]</column>
            <column>[federated.0ro78o71usso4z1bn9l191a2wqig].[Action (Country (or dependency))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='tick-color' scope='cols' value='#00000000' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='tick-color' scope='rows' value='#00000000' />
            <format attr='title' class='0' field='[federated.0ro78o71usso4z1bn9l191a2wqig].[none:Fert. Rate:qk]' scope='rows' value='Fertility Rate' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='font-weight' data-class='subtotal' scope='rows' value='bold' />
          </style-rule>
          <style-rule element='header'>
            <format attr='font-weight' data-class='subtotal' scope='rows' value='bold' />
            <format attr='band-color' scope='rows' value='#ffffff' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' scope='rows' value='bold' />
            <format attr='color' scope='rows' value='#000000' />
            <format attr='font-size' scope='rows' value='9' />
            <format attr='font-weight' scope='cols' value='bold' />
            <format attr='color' scope='cols' value='#000000' />
            <format attr='text-orientation' scope='rows' value='-90' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#ffffff' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='rows' value='1' />
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='line-pattern-only' scope='rows' value='dashed' />
            <format attr='stroke-color' scope='rows' value='#333333' />
            <format attr='stroke-color' scope='cols' value='#898989' />
            <format attr='stroke-size' scope='cols' value='2' />
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='dashed' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0ro78o71usso4z1bn9l191a2wqig].[none:Country (or dependency):nk]' />
              <size column='[federated.0ro78o71usso4z1bn9l191a2wqig].[sum:Net Change:qk]' />
              <lod column='[federated.0ro78o71usso4z1bn9l191a2wqig].[sum:Fert. Rate:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontcolor='#898989'>Country:</run>
                <run bold='true'><![CDATA[	<[federated.0ro78o71usso4z1bn9l191a2wqig].[none:Country (or dependency):nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Fertility Rate:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0ro78o71usso4z1bn9l191a2wqig].[none:Fert. Rate:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Migrants (net):&#9;</run>
                <run bold='true'><![CDATA[<[federated.0ro78o71usso4z1bn9l191a2wqig].[none:Migrants (net):qk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#898989'>Total change in population:</run>
                <run bold='true'><![CDATA[	<[federated.0ro78o71usso4z1bn9l191a2wqig].[sum:Net Change:qk]>]]></run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2.5082871913909912' />
                <format attr='shape' value=':filled/square' />
                <format attr='mark-transparency' value='208' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0ro78o71usso4z1bn9l191a2wqig].[none:Fert. Rate:qk]</rows>
        <cols>[federated.0ro78o71usso4z1bn9l191a2wqig].[none:Migrants (net):qk]</cols>
      </table>
      <simple-id uuid='{49C5ED8C-BA20-46B0-A03E-4A9BFD8955C4}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size maxheight='900' maxwidth='1600' minheight='900' minwidth='1600' preset-index='8' sizing-mode='fixed' />
      <datasources>
        <datasource caption='World_population' name='federated.0ro78o71usso4z1bn9l191a2wqig' />
      </datasources>
      <datasource-dependencies datasource='federated.0ro78o71usso4z1bn9l191a2wqig'>
        <column datatype='string' name='[Country (or dependency)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
          <semantic-values semantic-role='[Country].[Name]'>
            <semantic-value key='&quot;Czech Republic (Czechia)&quot;' value='&quot;Czechia&quot;' />
          </semantic-values>
        </column>
        <column-instance column='[Country (or dependency)]' derivation='None' name='[none:Country (or dependency):nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98222' id='33' param='horz' type-v2='layout-flow' w='99000' x='500' y='889'>
            <zone h='98222' id='31' type-v2='layout-basic' w='89000' x='500' y='889'>
              <zone h='85000' id='7' param='horz' type-v2='layout-flow' w='89000' x='500' y='14111'>
                <zone h='85000' id='5' type-v2='layout-basic' w='89000' x='500' y='14111'>
                  <zone h='44445' id='3' name='Country Population(2020), Urban and Yearly change in Population' w='89000' x='500' y='14111'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='40555' id='12' name='Country wise Population density, Median Age and World share in %' w='44508' x='44992' y='58556'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='40555' id='13' name='Total change in population due to Fertility rate and Migration ' w='44492' x='500' y='58556'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
              <zone h='13222' id='30' name='Country wise values' w='89000' x='500' y='889'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98222' id='32' is-fixed='true' param='vert' type-v2='layout-flow' w='10000' x='89500' y='889'>
              <zone h='7556' id='34' mode='dropdown' name='Country wise values' param='[federated.0ro78o71usso4z1bn9l191a2wqig].[none:Country (or dependency):nk]' type-v2='filter' values='database' w='10000' x='89500' y='889'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='90666' id='35' name='Country Population(2020), Urban and Yearly change in Population' param='[federated.0ro78o71usso4z1bn9l191a2wqig].[none:Country (or dependency):nk]' type-v2='filter' values='database' w='10000' x='89500' y='8445'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1100' minheight='1100' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='37' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98222' id='36' param='vert' type-v2='layout-flow' w='99000' x='500' y='889'>
                <zone h='7556' id='34' mode='dropdown' name='Country wise values' param='[federated.0ro78o71usso4z1bn9l191a2wqig].[none:Country (or dependency):nk]' type-v2='filter' values='database' w='10000' x='89500' y='889'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='111' h='13222' id='30' is-fixed='true' name='Country wise values' w='89000' x='500' y='889'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='90666' id='35' mode='checkdropdown' name='Country Population(2020), Urban and Yearly change in Population' param='[federated.0ro78o71usso4z1bn9l191a2wqig].[none:Country (or dependency):nk]' type-v2='filter' values='database' w='10000' x='89500' y='8445'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='44445' id='3' is-fixed='true' name='Country Population(2020), Urban and Yearly change in Population' w='89000' x='500' y='14111'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='40555' id='13' is-fixed='true' name='Total change in population due to Fertility rate and Migration ' w='44492' x='500' y='58556'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='40555' id='12' is-fixed='true' name='Country wise Population density, Median Age and World share in %' w='44508' x='44992' y='58556'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{39C3BF9B-6D51-4D70-A3E5-F94EA72CF867}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Total change in population due to Fertility rate and Migration '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0ro78o71usso4z1bn9l191a2wqig].[none:Migrants (net):qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='2' param='[federated.0ro78o71usso4z1bn9l191a2wqig].[none:Country (or dependency):nk]' type='color' />
            <card pane-specification-id='2' param='[federated.0ro78o71usso4z1bn9l191a2wqig].[sum:Net Change:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{ABF04FC4-1005-4E54-B971-7642CC504622}' />
    </window>
    <window class='worksheet' name='Country wise Population density, Median Age and World share in %'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0ro78o71usso4z1bn9l191a2wqig].[none:Country (or dependency):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{6731C83C-D91D-4D12-9E24-ADE929200704}' />
    </window>
    <window class='worksheet' name='Country Population(2020), Urban and Yearly change in Population'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='4' param='[federated.0ro78o71usso4z1bn9l191a2wqig].[none:Country (or dependency):nk]' type='color' />
            <card pane-specification-id='4' param='[federated.0ro78o71usso4z1bn9l191a2wqig].[none:Population (2020):qk]' type='size' />
            <card param='[federated.0ro78o71usso4z1bn9l191a2wqig].[none:Country (or dependency):nk]' type='highlighter' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{1B831AAB-8D9D-42EF-BA18-75A68F66F77C}' />
    </window>
    <window class='worksheet' name='Country wise values'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0ro78o71usso4z1bn9l191a2wqig].[:Measure Names]</field>
            <field>[federated.0ro78o71usso4z1bn9l191a2wqig].[none:Country (or dependency):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{76CAB12B-B7A5-4CCA-A89B-8A676AB77F4E}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Country Population(2020), Urban and Yearly change in Population'>
          <zoom type='entire-view' />
          <highlight field='[federated.0ro78o71usso4z1bn9l191a2wqig].[none:Country (or dependency):nk]' type='highlight'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Country wise Population density, Median Age and World share in %'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Country wise values'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Total change in population due to Fertility rate and Migration '>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='13' />
      <device-preview visible='true' />
      <simple-id uuid='{DA3AB753-BDA1-4DC6-B82A-509BCD552C9E}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Country Population(2020), Urban and Yearly change in Population' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Country wise Population density, Median Age and World share in %' width='192'>
      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
      iK4AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Country wise values' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      ppqf/fj/cOfdq/njy79l+7YtzJw9F71ezwfvreWTjR9x+OABup1O1q15B6/XS05eHr/79Ys4
      nU6yc3JpqK/nlV+/yPr31uKIieHdN99g/XtrycjK4o8v/5a9u3Yye06ozJFmy+ZPWPv2W1gs
      FlJSU/voORZ8sW0L2z77FJstmld+8xKNDQ1otVp+/5uXOHf2S+bOD9WTV37zEls3f0JCYhKf
      b/mMD99fx6TJk/l4w4e9x5Yh1plRawE0TYWgi8E3awXa4o+wv/Yj7L9+Bm3daRy/vBfHH/4W
      be0BtJ1VOP7rUaJ//SC6uqbRUq8fwWCQjR9+QHxCApUV5bS1tTBz9hxkKbS48tBjjzN/4SJm
      z51HZ2cntyxcRHJqKiePH8NsNtPSFNI9OSWFH/7t35OQmMjc+bf0HsfHJxAIBAgEAnh93lH5
      TiePH2PZHStYv3ZNPz1Hm7bWFupqaul2Otm9YzuLl97Gnp07qK2pJjU9g/q6SwuO9XW1pKZn
      UFNdRW1NNX/9gx+yfu3a3uMN698fsh6jZgBy/FR67nwO84d/i8YLgQl3ELSKGE5tJjD5IXDX
      XyY7Ed/UuWh6nKOlXj+OHz1CQ10dhw8eoPT8eazWaBAETp88AYQM5MCe3Sxdfju3LFzEwltv
      5YO1a/jog/WUnj/P/r27e8va9NGHfO3+BxBFsfe4trqaqdOmM3XadGoqq0blOz397HO4XT3Y
      Hfaweo4mH2/YQGNDPfv37mHVPV9Dp9Oh0+soKS7mjjvvQhQ1BINBgsEgoqjhjjvvoqS4mJ6e
      bpqbmrDarL3HUdfRYxi1dQCxoxzT/veRkmYTjHIRtWsr3tkP4MvJxnxsO1J0IsEEB0TloKk5
      j+TQQtQUgnGxI6bTYNi/ZzeLlixl22efUldbw4o7V7FrxxcsX3EnLlcP+RMmcuzIYXbv2M7D
      j3+djMwsujo7qamuZteOL3j2O3/B0cOHWLo8tOS/e8d2li6/HUVRWPPWGwA8/uTTiOLIv4sO
      7NvL8SOHefJb38Zut/fqOXX69BF/diT279lNWkYm69e+y9fuf5Ck5GTefO1PTJ0+A5erh/SM
      TDra2zlz6iRPPfscJcVFHDtymG8+9zxfnj7Ve2wwGIb0/DFZCBNbi9B4dATSx6bveT20t7Vh
      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
    </thumbnail>
    <thumbnail height='192' name='Total change in population due to Fertility rate and Migration ' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
