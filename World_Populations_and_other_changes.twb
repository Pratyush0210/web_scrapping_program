<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20222.23.0311.1104                               -->
<workbook original-version='18.1' source-build='2022.2.8 (20222.23.0311.1104)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='World_population' inline='true' name='federated.0ro78o71usso4z1bn9l191a2wqig' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='World_population' name='textscan.11mwb8i1uecy921660dgk0ade0pq'>
            <connection class='textscan' directory='C:/Users/PRATYUSH KUMAR/OneDrive/Desktop/Everything on desktop/Excel+assesments+course' filename='World_population.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.11mwb8i1uecy921660dgk0ade0pq' name='World_population.csv' table='[World_population#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='integer' name='#' ordinal='1' />
            <column datatype='string' name='Country (or dependency)' ordinal='2' />
            <column datatype='integer' name='Population (2020)' ordinal='3' />
            <column datatype='real' name='Yearly Change in %' ordinal='4' />
            <column datatype='integer' name='Net Change' ordinal='5' />
            <column datatype='integer' name='Density (P/Km²)' ordinal='6' />
            <column datatype='integer' name='Land Area (Km²)' ordinal='7' />
            <column datatype='real' name='Migrants (net)' ordinal='8' />
            <column datatype='real' name='Fert. Rate' ordinal='9' />
            <column datatype='real' name='Med. Age' ordinal='10' />
            <column datatype='real' name='Urban Pop %' ordinal='11' />
            <column datatype='real' name='World Share in %' ordinal='12' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.11mwb8i1uecy921660dgk0ade0pq' name='World_population.csv' table='[World_population#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='integer' name='#' ordinal='1' />
            <column datatype='string' name='Country (or dependency)' ordinal='2' />
            <column datatype='integer' name='Population (2020)' ordinal='3' />
            <column datatype='real' name='Yearly Change in %' ordinal='4' />
            <column datatype='integer' name='Net Change' ordinal='5' />
            <column datatype='integer' name='Density (P/Km²)' ordinal='6' />
            <column datatype='integer' name='Land Area (Km²)' ordinal='7' />
            <column datatype='real' name='Migrants (net)' ordinal='8' />
            <column datatype='real' name='Fert. Rate' ordinal='9' />
            <column datatype='real' name='Med. Age' ordinal='10' />
            <column datatype='real' name='Urban Pop %' ordinal='11' />
            <column datatype='real' name='World Share in %' ordinal='12' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[World_population.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;₹&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[World_population.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[World_population.csv_3ADDD34700384CF7A1DF190CF2DDFF48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>#</remote-name>
            <remote-type>20</remote-type>
            <local-name>[#]</local-name>
            <parent-name>[World_population.csv]</parent-name>
            <remote-alias>#</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[World_population.csv_3ADDD34700384CF7A1DF190CF2DDFF48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country (or dependency)</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country (or dependency)]</local-name>
            <parent-name>[World_population.csv]</parent-name>
            <remote-alias>Country (or dependency)</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[World_population.csv_3ADDD34700384CF7A1DF190CF2DDFF48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population (2020)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population (2020)]</local-name>
            <parent-name>[World_population.csv]</parent-name>
            <remote-alias>Population (2020)</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[World_population.csv_3ADDD34700384CF7A1DF190CF2DDFF48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Yearly Change in %</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Yearly Change in %]</local-name>
            <parent-name>[World_population.csv]</parent-name>
            <remote-alias>Yearly Change in %</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[World_population.csv_3ADDD34700384CF7A1DF190CF2DDFF48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Net Change</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Net Change]</local-name>
            <parent-name>[World_population.csv]</parent-name>
            <remote-alias>Net Change</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[World_population.csv_3ADDD34700384CF7A1DF190CF2DDFF48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Density (P/Km²)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Density (P/Km²)]</local-name>
            <parent-name>[World_population.csv]</parent-name>
            <remote-alias>Density (P/Km²)</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[World_population.csv_3ADDD34700384CF7A1DF190CF2DDFF48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Land Area (Km²)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Land Area (Km²)]</local-name>
            <parent-name>[World_population.csv]</parent-name>
            <remote-alias>Land Area (Km²)</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[World_population.csv_3ADDD34700384CF7A1DF190CF2DDFF48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Migrants (net)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Migrants (net)]</local-name>
            <parent-name>[World_population.csv]</parent-name>
            <remote-alias>Migrants (net)</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[World_population.csv_3ADDD34700384CF7A1DF190CF2DDFF48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Fert. Rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Fert. Rate]</local-name>
            <parent-name>[World_population.csv]</parent-name>
            <remote-alias>Fert. Rate</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[World_population.csv_3ADDD34700384CF7A1DF190CF2DDFF48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Med. Age</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Med. Age]</local-name>
            <parent-name>[World_population.csv]</parent-name>
            <remote-alias>Med. Age</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[World_population.csv_3ADDD34700384CF7A1DF190CF2DDFF48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Urban Pop %</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Urban Pop %]</local-name>
            <parent-name>[World_population.csv]</parent-name>
            <remote-alias>Urban Pop %</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[World_population.csv_3ADDD34700384CF7A1DF190CF2DDFF48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>World Share in %</remote-name>
            <remote-type>5</remote-type>
            <local-name>[World Share in %]</local-name>
            <parent-name>[World_population.csv]</parent-name>
            <remote-alias>World Share in %</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[World_population.csv_3ADDD34700384CF7A1DF190CF2DDFF48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.0ro78o71usso4z1bn9l191a2wqig].[attr:Med. Age:qk]&quot;' value='Median Age' />
          <alias key='&quot;[federated.0ro78o71usso4z1bn9l191a2wqig].[attr:Urban Pop \%:qk]&quot;' value='Urban Population in %' />
        </aliases>
      </column>
      <column caption='Total Population' datatype='integer' name='[Calculation_433752959361794048]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Population (2020)]' />
      </column>
      <column caption='Urban Population' datatype='real' name='[Calculation_433752959363108868]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='[Urban Pop %]' />
      </column>
      <column datatype='string' name='[Country (or dependency)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
        <semantic-values semantic-role='[Country].[Name]'>
          <semantic-value key='&quot;Czech Republic (Czechia)&quot;' value='&quot;Czechia&quot;' />
        </semantic-values>
      </column>
      <column datatype='real' name='[Fert. Rate]' role='measure' type='quantitative' />
      <column datatype='real' name='[Med. Age]' role='measure' type='quantitative' />
      <column datatype='real' name='[Migrants (net)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Net Change]' role='measure' type='quantitative' />
      <column datatype='real' name='[Urban Pop %]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='World_population.csv' datatype='table' name='[__tableau_internal_object_id__].[World_population.csv_3ADDD34700384CF7A1DF190CF2DDFF48]' role='measure' type='quantitative' />
      <column-instance column='[Fert. Rate]' derivation='Attribute' name='[attr:Fert. Rate:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Med. Age]' derivation='Attribute' name='[attr:Med. Age:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Migrants (net)]' derivation='Attribute' name='[attr:Migrants (net):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Net Change]' derivation='Attribute' name='[attr:Net Change:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Urban Pop %]' derivation='Attribute' name='[attr:Urban Pop %:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Country (or dependency)]' derivation='Max' name='[max:Country (or dependency):nk]' pivot='key' type='nominal' />
      <column-instance column='[Country (or dependency)]' derivation='None' name='[none:Country (or dependency):nk]' pivot='key' type='nominal' />
      <column-instance column='[Fert. Rate]' derivation='None' name='[none:Fert. Rate:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Migrants (net)]' derivation='None' name='[none:Migrants (net):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Net Change]' derivation='None' name='[none:Net Change:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Fert. Rate]' derivation='Sum' name='[sum:Fert. Rate:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Migrants (net)]' derivation='Sum' name='[sum:Migrants (net):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Net Change]' derivation='Sum' name='[sum:Net Change:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Urban Pop %]' derivation='Sum' name='[sum:Urban Pop %:qk]' pivot='key' type='quantitative' />
      <group caption='Action (Country (or dependency))' hidden='true' name='[Action (Country (or dependency))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country (or dependency)]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0ro78o71usso4z1bn9l191a2wqig].[attr:Fert. Rate:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0ro78o71usso4z1bn9l191a2wqig].[attr:Urban Pop \%:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0ro78o71usso4z1bn9l191a2wqig].[none:Fert. Rate:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0ro78o71usso4z1bn9l191a2wqig].[sum:Fert. Rate:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0ro78o71usso4z1bn9l191a2wqig].[sum:Urban Pop \%:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0ro78o71usso4z1bn9l191a2wqig].[attr:Net Change:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0ro78o71usso4z1bn9l191a2wqig].[none:Net Change:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0ro78o71usso4z1bn9l191a2wqig].[sum:Net Change:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0ro78o71usso4z1bn9l191a2wqig].[attr:Migrants (net):qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0ro78o71usso4z1bn9l191a2wqig].[none:Migrants (net):qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0ro78o71usso4z1bn9l191a2wqig].[sum:Migrants (net):qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[max:Country (or dependency):nk]' palette='summer_10_0' type='palette'>
            <map to='#00a2b3'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#00a2b3'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#00a2b3'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#00a2b3'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#00a2b3'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#00a2b3'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#00a2b3'>
              <bucket>&quot;Curaçao&quot;</bucket>
            </map>
            <map to='#00a2b3'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#00a2b3'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#00a2b3'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#00a2b3'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#00a2b3'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#00a2b3'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#00a2b3'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#00a2b3'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#00a2b3'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#00a2b3'>
              <bucket>&quot;Mayotte&quot;</bucket>
            </map>
            <map to='#00a2b3'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#00a2b3'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#00a2b3'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#00a2b3'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#00a2b3'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#00a2b3'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#00a2b3'>
              <bucket>&quot;Sint Maarten&quot;</bucket>
            </map>
            <map to='#00a2b3'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#00a2b3'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#00a2b3'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#00a2b3'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#00a2b3'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;Niue&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;Caribbean Netherlands&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;Saint Barthelemy&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;Sao Tome &amp; Principe&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;Cabo Verde&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;Channel Islands&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;Côte d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;French Guiana&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;North Korea&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;Réunion&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;Saint Martin&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;Turks and Caicos&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;Saint Pierre &amp; Miquelon&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;American Samoa&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;DR Congo&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;Holy See&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;Tokelau&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;U.S. Virgin Islands&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;Czech Republic (Czechia)&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;Micronesia&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;St. Vincent &amp; Grenadines&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;Wallis &amp; Futuna&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;Saint Kitts &amp; Nevis&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;State of Palestine&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;Western Sahara&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Country (or dependency):nk]' palette='summer_10_0' type='palette'>
            <map to='#00a2b3'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#00a2b3'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#00a2b3'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#00a2b3'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#00a2b3'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#00a2b3'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#00a2b3'>
              <bucket>&quot;Curaçao&quot;</bucket>
            </map>
            <map to='#00a2b3'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#00a2b3'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#00a2b3'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#00a2b3'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#00a2b3'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#00a2b3'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#00a2b3'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#00a2b3'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#00a2b3'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#00a2b3'>
              <bucket>&quot;Mayotte&quot;</bucket>
            </map>
            <map to='#00a2b3'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#00a2b3'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#00a2b3'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#00a2b3'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#00a2b3'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#00a2b3'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#00a2b3'>
              <bucket>&quot;Sint Maarten&quot;</bucket>
            </map>
            <map to='#00a2b3'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#00a2b3'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#00a2b3'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#00a2b3'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#00a2b3'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;Niue&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;Caribbean Netherlands&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;Saint Barthelemy&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;Sao Tome &amp; Principe&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;Cabo Verde&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;Channel Islands&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;Côte d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;French Guiana&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;North Korea&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;Réunion&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;Saint Martin&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;Turks and Caicos&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;Saint Pierre &amp; Miquelon&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;American Samoa&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;DR Congo&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;Holy See&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;Tokelau&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;U.S. Virgin Islands&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;Czech Republic (Czechia)&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;Micronesia&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;St. Vincent &amp; Grenadines&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;Wallis &amp; Futuna&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;Saint Kitts &amp; Nevis&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;State of Palestine&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;Western Sahara&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='World_population.csv' id='World_population.csv_3ADDD34700384CF7A1DF190CF2DDFF48'>
            <properties context=''>
              <relation connection='textscan.11mwb8i1uecy921660dgk0ade0pq' name='World_population.csv' table='[World_population#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='integer' name='#' ordinal='1' />
                  <column datatype='string' name='Country (or dependency)' ordinal='2' />
                  <column datatype='integer' name='Population (2020)' ordinal='3' />
                  <column datatype='real' name='Yearly Change in %' ordinal='4' />
                  <column datatype='integer' name='Net Change' ordinal='5' />
                  <column datatype='integer' name='Density (P/Km²)' ordinal='6' />
                  <column datatype='integer' name='Land Area (Km²)' ordinal='7' />
                  <column datatype='real' name='Migrants (net)' ordinal='8' />
                  <column datatype='real' name='Fert. Rate' ordinal='9' />
                  <column datatype='real' name='Med. Age' ordinal='10' />
                  <column datatype='real' name='Urban Pop %' ordinal='11' />
                  <column datatype='real' name='World Share in %' ordinal='12' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1_63B6331583FA429D8497F95A59BBEDF5]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Country wise values' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Country Population(2020), Urban and Yearly change in Population'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#555555' fontname='Tableau Semibold' fontsize='12'>Country Population(2020), Urban and Yearly change in Population</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='World_population' name='federated.0ro78o71usso4z1bn9l191a2wqig' />
          </datasources>
          <datasource-dependencies datasource='federated.0ro78o71usso4z1bn9l191a2wqig'>
            <column datatype='string' name='[Country (or dependency)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Czech Republic (Czechia)&quot;' value='&quot;Czechia&quot;' />
              </semantic-values>
            </column>
            <column datatype='integer' name='[Population (2020)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Urban Pop %]' role='measure' type='quantitative' />
            <column datatype='real' name='[Yearly Change in %]' role='measure' type='quantitative' />
            <column-instance column='[Country (or dependency)]' derivation='None' name='[none:Country (or dependency):nk]' pivot='key' type='nominal' />
            <column-instance column='[Population (2020)]' derivation='None' name='[none:Population (2020):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Urban Pop %]' derivation='None' name='[none:Urban Pop %:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Yearly Change in %]' derivation='None' name='[none:Yearly Change in %:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ro78o71usso4z1bn9l191a2wqig].[none:Country (or dependency):nk]' filter-group='3'>
            <groupfilter function='level-members' level='[none:Country (or dependency):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0ro78o71usso4z1bn9l191a2wqig].[none:Urban Pop %:qk]' included-values='non-null' />
          <slices>
            <column>[federated.0ro78o71usso4z1bn9l191a2wqig].[none:Urban Pop %:qk]</column>
            <column>[federated.0ro78o71usso4z1bn9l191a2wqig].[none:Country (or dependency):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
            <format attr='tick-color' value='#00000000' />
            <format attr='title' class='0' field='[federated.0ro78o71usso4z1bn9l191a2wqig].[none:Urban Pop %:qk]' scope='rows' value='Urban Population in %' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='font-weight' value='bold' />
            <format attr='color' value='#000000' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' scope='rows' value='-90' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' data-class='subtotal' value='#00000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='cols' value='0' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-weight' value='bold' />
            <format attr='font-size' value='9' />
            <format attr='color' value='#000000' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-color' value='#898989' />
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='dotted' />
            <format attr='stroke-size' value='2' />
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0ro78o71usso4z1bn9l191a2wqig].[none:Country (or dependency):nk]' />
              <size column='[federated.0ro78o71usso4z1bn9l191a2wqig].[none:Population (2020):qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' fontsize='11'>Country (or dependency):&#9;</run>
                <run bold='true' fontcolor='#aa0000' fontsize='11'><![CDATA[<[federated.0ro78o71usso4z1bn9l191a2wqig].[none:Country (or dependency):nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='11'>Population (2020):&#9;</run>
                <run bold='true' fontcolor='#ff5500' fontsize='11'><![CDATA[<[federated.0ro78o71usso4z1bn9l191a2wqig].[none:Population (2020):qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='11'>Urban Population in %:&#9;</run>
                <run bold='true' fontcolor='#d37295' fontsize='11'><![CDATA[<[federated.0ro78o71usso4z1bn9l191a2wqig].[none:Urban Pop %:qk]> %]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='11'>Yearly Change in %:&#9;</run>
                <run bold='true' fontcolor='#348a70' fontsize='11'><![CDATA[<[federated.0ro78o71usso4z1bn9l191a2wqig].[none:Yearly Change in %:qk]> %]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='6.9928369522094727' />
                <format attr='shape' value=':filled/circle' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0ro78o71usso4z1bn9l191a2wqig].[none:Urban Pop %:qk]</rows>
        <cols>[federated.0ro78o71usso4z1bn9l191a2wqig].[none:Yearly Change in %:qk]</cols>
      </table>
      <simple-id uuid='{409C0A51-6A06-48EE-A855-BF33FFC3C53A}' />
    </worksheet>
    <worksheet name='Country wise Population density, Median Age and World share in %'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#555555' fontname='Tableau Medium' fontsize='12'>Country wise Population density, Median Age and World share in %</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='World_population' name='federated.0ro78o71usso4z1bn9l191a2wqig' />
          </datasources>
          <datasource-dependencies datasource='federated.0ro78o71usso4z1bn9l191a2wqig'>
            <column datatype='string' name='[Country (or dependency)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Czech Republic (Czechia)&quot;' value='&quot;Czechia&quot;' />
              </semantic-values>
            </column>
            <column datatype='integer' name='[Density (P/Km²)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Med. Age]' role='measure' type='quantitative' />
            <column datatype='real' name='[World Share in %]' role='measure' type='quantitative' />
            <column-instance column='[Country (or dependency)]' derivation='None' name='[none:Country (or dependency):nk]' pivot='key' type='nominal' />
            <column-instance column='[Density (P/Km²)]' derivation='Sum' name='[sum:Density (P/Km²):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Med. Age]' derivation='Sum' name='[sum:Med. Age:qk]' pivot='key' type='quantitative' />
            <column-instance column='[World Share in %]' derivation='Sum' name='[sum:World Share in %:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ro78o71usso4z1bn9l191a2wqig].[none:Country (or dependency):nk]' filter-group='3'>
            <groupfilter function='level-members' level='[none:Country (or dependency):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0ro78o71usso4z1bn9l191a2wqig].[none:Country (or dependency):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='font-weight' data-class='subtotal' value='bold' />
            <format attr='font-size' data-class='subtotal' value='10' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' value='#000000' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#f5f5f5' />
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='rows' value='1' />
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#ffffff' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' value='#0000009b' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='solid' />
            <format attr='stroke-size' value='1' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='color' value='#000000' />
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='color' value='#000000' />
            <format attr='font-family' value='Tableau Light' />
            <format attr='font-weight' value='bold' />
            <format attr='font-size' value='10' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0ro78o71usso4z1bn9l191a2wqig].[none:Country (or dependency):nk]' value='Country (or dependency)' />
          </style-rule>
          <style-rule element='tooltip'>
            <format attr='font-weight' value='normal' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0ro78o71usso4z1bn9l191a2wqig].[none:Country (or dependency):nk]' />
              <size column='[federated.0ro78o71usso4z1bn9l191a2wqig].[sum:World Share in %:qk]' />
              <lod column='[federated.0ro78o71usso4z1bn9l191a2wqig].[sum:Med. Age:qk]' />
              <lod column='[federated.0ro78o71usso4z1bn9l191a2wqig].[sum:Density (P/Km²):qk]' />
              <text column='[federated.0ro78o71usso4z1bn9l191a2wqig].[none:Country (or dependency):nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontcolor='#787878'>Country (or dependency):&#9;</run>
                <run bold='true'><![CDATA[<[federated.0ro78o71usso4z1bn9l191a2wqig].[none:Country (or dependency):nk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#666666'>Population Density:</run>
                <run bold='true'><![CDATA[	<[federated.0ro78o71usso4z1bn9l191a2wqig].[sum:Density (P/Km²):qk]> P/Km²]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#787878'>Median Age:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0ro78o71usso4z1bn9l191a2wqig].[sum:Med. Age:qk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#787878'>World Share in %:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0ro78o71usso4z1bn9l191a2wqig].[sum:World Share in %:qk]> %]]></run>
              </formatted-text>
            </customized-tooltip>
            <customized-label>
              <formatted-text>
                <run bold='true' fontcolor='#000000' fontsize='10'>&lt;</run>
                <run bold='true' fontcolor='#000000' fontsize='10'>[federated.0ro78o71usso4z1bn9l191a2wqig].[none:Country (or dependency):nk]</run>
                <run bold='true' fontcolor='#000000' fontsize='10'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{A491334C-934A-4518-AF68-C89E5E31573F}' />
    </worksheet>
    <worksheet name='Country wise values'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='World_population' name='federated.0ro78o71usso4z1bn9l191a2wqig' />
          </datasources>
          <datasource-dependencies datasource='federated.0ro78o71usso4z1bn9l191a2wqig'>
            <column caption='Total Population' datatype='integer' name='[Calculation_433752959361794048]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Population (2020)]' />
            </column>
            <column datatype='string' name='[Country (or dependency)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Czech Republic (Czechia)&quot;' value='&quot;Czechia&quot;' />
              </semantic-values>
            </column>
            <column datatype='integer' name='[Density (P/Km²)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Land Area (Km²)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Med. Age]' role='measure' type='quantitative' />
            <column datatype='real' name='[Migrants (net)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Population (2020)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Urban Pop %]' role='measure' type='quantitative' />
            <column datatype='real' name='[World Share in %]' role='measure' type='quantitative' />
            <column datatype='real' name='[Yearly Change in %]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_433752959361794048]' derivation='Attribute' name='[attr:Calculation_433752959361794048:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Density (P/Km²)]' derivation='Attribute' name='[attr:Density (P/Km²):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Land Area (Km²)]' derivation='Attribute' name='[attr:Land Area (Km²):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Med. Age]' derivation='Attribute' name='[attr:Med. Age:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Migrants (net)]' derivation='Attribute' name='[attr:Migrants (net):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Urban Pop %]' derivation='Attribute' name='[attr:Urban Pop %:qk]' pivot='key' type='quantitative' />
            <column-instance column='[World Share in %]' derivation='Attribute' name='[attr:World Share in %:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Yearly Change in %]' derivation='Attribute' name='[attr:Yearly Change in %:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country (or dependency)]' derivation='None' name='[none:Country (or dependency):nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ro78o71usso4z1bn9l191a2wqig].[:Measure Names]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ro78o71usso4z1bn9l191a2wqig].[attr:Density (P/Km²):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ro78o71usso4z1bn9l191a2wqig].[attr:Land Area (Km²):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ro78o71usso4z1bn9l191a2wqig].[attr:Med. Age:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ro78o71usso4z1bn9l191a2wqig].[attr:Migrants (net):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ro78o71usso4z1bn9l191a2wqig].[attr:Calculation_433752959361794048:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ro78o71usso4z1bn9l191a2wqig].[attr:Urban Pop \%:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0ro78o71usso4z1bn9l191a2wqig].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0ro78o71usso4z1bn9l191a2wqig].[attr:Calculation_433752959361794048:qk]&quot;</bucket>
              <bucket>&quot;[federated.0ro78o71usso4z1bn9l191a2wqig].[attr:Density (P/Km²):qk]&quot;</bucket>
              <bucket>&quot;[federated.0ro78o71usso4z1bn9l191a2wqig].[attr:Land Area (Km²):qk]&quot;</bucket>
              <bucket>&quot;[federated.0ro78o71usso4z1bn9l191a2wqig].[attr:Urban Pop \%:qk]&quot;</bucket>
              <bucket>&quot;[federated.0ro78o71usso4z1bn9l191a2wqig].[attr:Med. Age:qk]&quot;</bucket>
              <bucket>&quot;[federated.0ro78o71usso4z1bn9l191a2wqig].[attr:Migrants (net):qk]&quot;</bucket>
              <bucket>&quot;[federated.0ro78o71usso4z1bn9l191a2wqig].[attr:World Share in \%:qk]&quot;</bucket>
              <bucket>&quot;[federated.0ro78o71usso4z1bn9l191a2wqig].[attr:Yearly Change in \%:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0ro78o71usso4z1bn9l191a2wqig].[none:Country (or dependency):nk]'>
            <groupfilter function='member' level='[none:Country (or dependency):nk]' member='&quot;Monaco&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0ro78o71usso4z1bn9l191a2wqig].[:Measure Names]</column>
            <column>[federated.0ro78o71usso4z1bn9l191a2wqig].[none:Country (or dependency):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0ro78o71usso4z1bn9l191a2wqig].[attr:Med. Age:qk]' value='N' />
            <format attr='font-size' data-class='subtotal' value='14' />
            <format attr='font-size' data-class='total' value='15' />
            <format attr='color' value='#000000' />
            <format attr='font-weight' value='bold' />
            <format attr='text-align' value='center' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0ro78o71usso4z1bn9l191a2wqig].[none:Country (or dependency):nk]' value='240' />
            <format attr='background-color' field='[federated.0ro78o71usso4z1bn9l191a2wqig].[:Measure Names]' value='#faf4e7' />
          </style-rule>
          <style-rule element='field-labels-decoration'>
            <format attr='font-weight' value='bold' />
            <format attr='font-size' value='10' />
            <format attr='background-color' value='#faf4e7' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' value='#000000' />
            <format attr='font-weight' value='bold' />
            <format attr='font-size' value='10' />
            <format attr='text-align' value='center' />
            <format attr='font-size' field='[federated.0ro78o71usso4z1bn9l191a2wqig].[none:Country (or dependency):nk]' value='12' />
            <format attr='color' field='[federated.0ro78o71usso4z1bn9l191a2wqig].[none:Country (or dependency):nk]' value='#ff5500' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#dfedeb' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='rows' value='1' />
            <format attr='background-color' value='#e7f1f5' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='tooltip'>
            <format attr='color' value='#000000' />
            <format attr='font-weight' value='normal' />
            <format attr='font-size' value='14' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0ro78o71usso4z1bn9l191a2wqig].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0ro78o71usso4z1bn9l191a2wqig].[none:Country (or dependency):nk]</rows>
        <cols>[federated.0ro78o71usso4z1bn9l191a2wqig].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{AEB894E0-D22A-4A73-906A-EAAA1B438000}' />
    </worksheet>
    <worksheet name='Total change in population due to Fertility rate and Migration '>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#555555' fontname='Tableau Medium' fontsize='11'>Total change in population due to Fertility rate and Migration </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='World_population' name='federated.0ro78o71usso4z1bn9l191a2wqig' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0ro78o71usso4z1bn9l191a2wqig'>
            <column datatype='string' name='[Country (or dependency)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Czech Republic (Czechia)&quot;' value='&quot;Czechia&quot;' />
              </semantic-values>
            </column>
            <column datatype='real' name='[Fert. Rate]' role='measure' type='quantitative' />
            <column datatype='real' name='[Migrants (net)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Net Change]' role='measure' type='quantitative' />
            <column-instance column='[Country (or dependency)]' derivation='None' name='[none:Country (or dependency):nk]' pivot='key' type='nominal' />
            <column-instance column='[Fert. Rate]' derivation='None' name='[none:Fert. Rate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Migrants (net)]' derivation='None' name='[none:Migrants (net):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Fert. Rate]' derivation='Sum' name='[sum:Fert. Rate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Net Change]' derivation='Sum' name='[sum:Net Change:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ro78o71usso4z1bn9l191a2wqig].[Action (Country (or dependency))]'>
            <groupfilter function='level-members' level='[Country (or dependency)]' user:ui-action-filter='[Action1_63B6331583FA429D8497F95A59BBEDF5]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0ro78o71usso4z1bn9l191a2wqig].[none:Country (or dependency):nk]' filter-group='3'>
            <groupfilter function='level-members' level='[none:Country (or dependency):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0ro78o71usso4z1bn9l191a2wqig].[none:Migrants (net):qk]' included-values='non-null' />
          <slices>
            <column>[federated.0ro78o71usso4z1bn9l191a2wqig].[none:Migrants (net):qk]</column>
            <column>[federated.0ro78o71usso4z1bn9l191a2wqig].[none:Country (or dependency):nk]</column>
            <column>[federated.0ro78o71usso4z1bn9l191a2wqig].[Action (Country (or dependency))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='tick-color' scope='cols' value='#00000000' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='tick-color' scope='rows' value='#00000000' />
            <format attr='title' class='0' field='[federated.0ro78o71usso4z1bn9l191a2wqig].[none:Fert. Rate:qk]' scope='rows' value='Fertility Rate' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='font-weight' data-class='subtotal' scope='rows' value='bold' />
          </style-rule>
          <style-rule element='header'>
            <format attr='font-weight' data-class='subtotal' scope='rows' value='bold' />
            <format attr='band-color' scope='rows' value='#ffffff' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' scope='rows' value='bold' />
            <format attr='color' scope='rows' value='#000000' />
            <format attr='font-size' scope='rows' value='9' />
            <format attr='font-weight' scope='cols' value='bold' />
            <format attr='color' scope='cols' value='#000000' />
            <format attr='text-orientation' scope='rows' value='-90' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#ffffff' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='rows' value='1' />
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='line-pattern-only' scope='rows' value='dashed' />
            <format attr='stroke-color' scope='rows' value='#333333' />
            <format attr='stroke-color' scope='cols' value='#898989' />
            <format attr='stroke-size' scope='cols' value='2' />
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='dashed' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0ro78o71usso4z1bn9l191a2wqig].[none:Country (or dependency):nk]' />
              <size column='[federated.0ro78o71usso4z1bn9l191a2wqig].[sum:Net Change:qk]' />
              <lod column='[federated.0ro78o71usso4z1bn9l191a2wqig].[sum:Fert. Rate:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontcolor='#898989'>Country:</run>
                <run bold='true'><![CDATA[	<[federated.0ro78o71usso4z1bn9l191a2wqig].[none:Country (or dependency):nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Fertility Rate:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0ro78o71usso4z1bn9l191a2wqig].[none:Fert. Rate:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Migrants (net):&#9;</run>
                <run bold='true'><![CDATA[<[federated.0ro78o71usso4z1bn9l191a2wqig].[none:Migrants (net):qk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#898989'>Total change in population:</run>
                <run bold='true'><![CDATA[	<[federated.0ro78o71usso4z1bn9l191a2wqig].[sum:Net Change:qk]>]]></run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='3.5690608024597168' />
                <format attr='shape' value=':filled/square' />
                <format attr='mark-transparency' value='254' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0ro78o71usso4z1bn9l191a2wqig].[none:Fert. Rate:qk]</rows>
        <cols>[federated.0ro78o71usso4z1bn9l191a2wqig].[none:Migrants (net):qk]</cols>
      </table>
      <simple-id uuid='{49C5ED8C-BA20-46B0-A03E-4A9BFD8955C4}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size maxheight='900' maxwidth='1600' minheight='900' minwidth='1600' preset-index='8' sizing-mode='fixed' />
      <datasources>
        <datasource caption='World_population' name='federated.0ro78o71usso4z1bn9l191a2wqig' />
      </datasources>
      <datasource-dependencies datasource='federated.0ro78o71usso4z1bn9l191a2wqig'>
        <column datatype='string' name='[Country (or dependency)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
          <semantic-values semantic-role='[Country].[Name]'>
            <semantic-value key='&quot;Czech Republic (Czechia)&quot;' value='&quot;Czechia&quot;' />
          </semantic-values>
        </column>
        <column-instance column='[Country (or dependency)]' derivation='None' name='[none:Country (or dependency):nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98222' id='43' param='vert' type-v2='layout-flow' w='99000' x='500' y='889'>
            <zone h='98222' id='33' param='horz' type-v2='layout-flow' w='99000' x='500' y='889'>
              <zone h='98222' id='31' type-v2='layout-basic' w='89000' x='500' y='889'>
                <zone h='85005' id='7' param='horz' type-v2='layout-flow' w='89000' x='500' y='14106'>
                  <zone h='85005' id='5' type-v2='layout-basic' w='89000' x='500' y='14106'>
                    <zone h='44441' id='3' name='Country Population(2020), Urban and Yearly change in Population' w='89000' x='500' y='14106'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='40564' id='12' name='Country wise Population density, Median Age and World share in %' w='44516' x='44984' y='58547'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='40564' id='13' name='Total change in population due to Fertility rate and Migration ' w='44484' x='500' y='58547'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                  </zone>
                </zone>
                <zone h='13217' id='30' name='Country wise values' w='89000' x='500' y='889'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
              <zone fixed-size='160' h='98222' id='32' is-fixed='true' param='vert' type-v2='layout-flow' w='10000' x='89500' y='889'>
                <zone h='7556' id='34' mode='dropdown' name='Country wise values' param='[federated.0ro78o71usso4z1bn9l191a2wqig].[none:Country (or dependency):nk]' type-v2='filter' values='database' w='10000' x='89500' y='889'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='90666' id='35' name='Country Population(2020), Urban and Yearly change in Population' param='[federated.0ro78o71usso4z1bn9l191a2wqig].[none:Country (or dependency):nk]' type-v2='filter' values='database' w='10000' x='89500' y='8445'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1100' minheight='1100' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='47' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98222' id='46' param='vert' type-v2='layout-flow' w='99000' x='500' y='889'>
                <zone h='7556' id='34' mode='dropdown' name='Country wise values' param='[federated.0ro78o71usso4z1bn9l191a2wqig].[none:Country (or dependency):nk]' type-v2='filter' values='database' w='10000' x='89500' y='889'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='111' h='13217' id='30' is-fixed='true' name='Country wise values' w='89000' x='500' y='889'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='90666' id='35' mode='checkdropdown' name='Country Population(2020), Urban and Yearly change in Population' param='[federated.0ro78o71usso4z1bn9l191a2wqig].[none:Country (or dependency):nk]' type-v2='filter' values='database' w='10000' x='89500' y='8445'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='44441' id='3' is-fixed='true' name='Country Population(2020), Urban and Yearly change in Population' w='89000' x='500' y='14106'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='40564' id='13' is-fixed='true' name='Total change in population due to Fertility rate and Migration ' w='44484' x='500' y='58547'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='40564' id='12' is-fixed='true' name='Country wise Population density, Median Age and World share in %' w='44516' x='44984' y='58547'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{39C3BF9B-6D51-4D70-A3E5-F94EA72CF867}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Total change in population due to Fertility rate and Migration '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0ro78o71usso4z1bn9l191a2wqig].[none:Migrants (net):qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='2' param='[federated.0ro78o71usso4z1bn9l191a2wqig].[none:Country (or dependency):nk]' type='color' />
            <card pane-specification-id='2' param='[federated.0ro78o71usso4z1bn9l191a2wqig].[sum:Net Change:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{ABF04FC4-1005-4E54-B971-7642CC504622}' />
    </window>
    <window class='worksheet' name='Country wise Population density, Median Age and World share in %'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='144'>
            <card pane-specification-id='0' param='[federated.0ro78o71usso4z1bn9l191a2wqig].[none:Country (or dependency):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight field='[federated.0ro78o71usso4z1bn9l191a2wqig].[none:Country (or dependency):nk]'>
          <bucket-selection />
        </highlight>
      </viewpoint>
      <simple-id uuid='{6731C83C-D91D-4D12-9E24-ADE929200704}' />
    </window>
    <window class='worksheet' name='Country Population(2020), Urban and Yearly change in Population'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='4' param='[federated.0ro78o71usso4z1bn9l191a2wqig].[none:Country (or dependency):nk]' type='color' />
            <card pane-specification-id='4' param='[federated.0ro78o71usso4z1bn9l191a2wqig].[none:Population (2020):qk]' type='size' />
            <card param='[federated.0ro78o71usso4z1bn9l191a2wqig].[none:Country (or dependency):nk]' type='highlighter' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{1B831AAB-8D9D-42EF-BA18-75A68F66F77C}' />
    </window>
    <window class='worksheet' name='Country wise values'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0ro78o71usso4z1bn9l191a2wqig].[:Measure Names]</field>
            <field>[federated.0ro78o71usso4z1bn9l191a2wqig].[none:Country (or dependency):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{76CAB12B-B7A5-4CCA-A89B-8A676AB77F4E}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Country Population(2020), Urban and Yearly change in Population'>
          <zoom type='entire-view' />
          <highlight field='[federated.0ro78o71usso4z1bn9l191a2wqig].[none:Country (or dependency):nk]' type='highlight'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Country wise Population density, Median Age and World share in %'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Country wise values'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Total change in population due to Fertility rate and Migration '>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='34' />
      <device-preview visible='true' />
      <simple-id uuid='{DA3AB753-BDA1-4DC6-B82A-509BCD552C9E}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Country Population(2020), Urban and Yearly change in Population' width='192'>
      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
      dk0BMHlf8/8D6ItwsPR3jjsAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Country wise Population density, Median Age and World share in %' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='Country wise values' width='192'>
      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
      pikAMe1vjYJp4JNh/74AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Total change in population due to Fertility rate and Migration ' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
